language: rust
rust: nightly
os: linux
cache: cargo

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

install:
  - rustup component add rustfmt
  - rustup component add clippy
#   - rustup target add thumbv7em-none-eabihf

# branches:
#   only:
    # - develop

matrix:
  include:
    # - name: "Test"
    #   os: linux
    #   dist: xenial
    #   script:
        # - rustup component add rustfmt
        # - rustup component add rust-src
        # - cargo test --no-run  # let's measure compile time separately
        # - cargo test
    - name: "Rust Docs"
      if: branch = master AND type = push
      before_script:
        - DEPLOY_DOCS=1
      script:
        - cargo doc --all --no-deps
      env:
        - RUSTFLAGS="-D warnings", CARGO_INCREMENTAL=0
    - name: "Rust build"
      script:
        - cargo build


before_deploy:
      # Set up git user name and tag this commit
      - git config --local user.name "smolkov"
      - git config --local user.email "sascha.smolkov@gmail.com"
      - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
      - git tag $TRAVIS_TAG

deploy:
  - provider: pages
    skip-cleanup: true
    github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
    keep-history: false
    local-dir: target/doc
    branch: gh-pages
    on:
      branch: master
      condition: $DEPLOY_DOCS = 1


after_success: |
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  for file in target/debug/examplerust-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"
